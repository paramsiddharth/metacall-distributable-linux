name: Build

on:
  push:
    tags:
    - 'v*'

jobs:

  prep:
  
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build the base image
        run: docker build -t metacall/distributable_linux -f Dockerfile .
      - name: Install the additional channels and pull
        run: docker run --privileged --name tmp metacall/distributable_linux sh -c 'guix pull'
      - name: Commit changes
        run: docker commit tmp metacall/distributable_linux && docker rm -f tmp
      - name: Build dependencies
        run: docker run -d --privileged --name tmp metacall/distributable_linux /metacall/scripts/deps.sh
      - name: Commit changes
        run: docker commit tmp metacall/distributable_linux && docker rm -f tmp
      - name: Build tarball
        run: docker run --rm -v $PWD/out:/metacall/pack --privileged metacall/distributable_linux /metacall/scripts/build.sh
      - name: Upload tarball artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-tarball
          path: out/
  
  test:

    name: Test
    runs-on: ubumtu-latest
    needs: prep
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: built-tarball
          path: out/
      - name: Generate a unique id for invalidating the cache of test layers
        run: export CACHE_INVALIDATE=$(date +%s)
      - name: Test CLI
        run: docker build --build-arg CACHE_INVALIDATE=${CACHE_INVALIDATE} -t metacall/distributable_linux_test:cli -f tests/cli/Dockerfile .
      - name: Test C
        run: docker build --build-arg CACHE_INVALIDATE=${CACHE_INVALIDATE} -t metacall/distributable_linux_test:c -f tests/c/Dockerfile .
      - name: Test Python
        run: docker build --build-arg CACHE_INVALIDATE=${CACHE_INVALIDATE} -t metacall/distributable_linux_test:python -f tests/python/Dockerfile .
      - name: Test Node
        run: docker build --build-arg CACHE_INVALIDATE=${CACHE_INVALIDATE} -t metacall/distributable_linux_test:node -f tests/node/Dockerfile .
      - name: Test TypeScript
        run: docker build --build-arg CACHE_INVALIDATE=${CACHE_INVALIDATE} -t metacall/distributable_linux_test:typescript -f tests/typescript/Dockerfile .